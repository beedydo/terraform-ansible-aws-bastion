---
- name: Configure local SSH client
  hosts: localhost
  connection: local
  vars_files:
    - vars.yml
  tasks:
    - name: Update local SSH config
      ansible.builtin.blockinfile:
        path: "{{ local_ssh_key_path }}/config"
        block: |
          Host {{ bastion_hostname }} {{ bastion_elastic_ip }}
            HostName {{ bastion_elastic_ip }}
            User {{ remote_user }}
            IdentityFile {{ local_ssh_key_path }}/{{ bastion_key_name }}.pem
          Host {{ resource_hostname }} {{ resource_private_ip }}
            HostName {{ resource_private_ip }}
            User {{ remote_user }}
            IdentityFile {{ local_ssh_key_path }}/{{ resource_key_name }}
            ProxyJump {{ bastion_hostname }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - interview-demo"
        create: true

    - name: Refresh known_hosts
      ansible.builtin.shell: |
        ssh-keygen -R "{{ bastion_elastic_ip }}"
        ssh-keygen -R "{{ resource_private_ip }}"
      changed_when: false

- name: Configure bastion host
  hosts: bastion_host
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Configure SSH daemon
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "^{{ item.key }}"
        line: "{{ item.key }} {{ item.value }}"
        validate: "/usr/sbin/sshd -t -f %s"
      loop:
        - { key: "AllowTcpForwarding", value: "yes" }
        - { key: "GatewayPorts", value: "yes" }
      notify: restart sshd

    - name: Setup SSH directory
      ansible.builtin.file:
        path: "/home/{{ remote_user }}/.ssh"
        state: directory
        mode: 0700
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"

    - name: Deploy resource server key
      ansible.builtin.copy:
        src: "{{ local_ssh_key_path }}/{{ resource_key_name }}"
        dest: "/home/{{ remote_user }}/.ssh/{{ resource_key_name }}"
        mode: 0400
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"

    - name: Configure SSH client for resource server
      ansible.builtin.blockinfile:
        path: "/home/{{ remote_user }}/.ssh/config"
        block: |
          Host {{ resource_hostname }} {{ resource_private_ip }}
            HostName {{ resource_private_ip }}
            IdentityFile /home/{{ remote_user }}/.ssh/{{ resource_key_name }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - resource"
        create: true

    - name: Configure host resolution
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          {{ bastion_elastic_ip }} {{ bastion_private_ip }} {{ bastion_hostname }}
          {{ resource_private_ip }} {{ resource_hostname }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - hosts"

    - name: Set system hostname
      ansible.builtin.hostname:
        name: "{{ bastion_hostname }}"

  handlers:
    - name: restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

- name: Configure resource server
  hosts: resource_server
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Create admin user
      ansible.builtin.user:
        name: admin
        password: "{{ 'admin' | password_hash('sha512') }}"
        shell: /bin/bash
        groups: wheel
        append: true

    - name: Configure host resolution
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          {{ bastion_elastic_ip }} {{ bastion_private_ip }} {{ bastion_hostname }}
          {{ resource_private_ip }} {{ resource_hostname }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK - hosts"

    - name: Set system hostname
      ansible.builtin.hostname:
        name: "{{ resource_hostname }}"
